name: Automated Gym Booking

on:
  schedule:
    # Run at 11:58 PM UTC (adjust for your timezone)
    - cron: '58 23 * * *'
  workflow_dispatch:  # Allows manual triggering for testing

jobs:
  book-gym-session:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Install Chromium
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser
          echo "Chromium installed at: $(which chromium-browser)"
          
      - name: Run debug test script
        env:
          GYM_USERNAME: ${{ secrets.GYM_USERNAME }}
          GYM_PASSWORD: ${{ secrets.GYM_PASSWORD }}
          PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium-browser
        run: |
          echo "Starting debug test..."
          node debug-test.js
          echo "Debug test completed with exit code: $?"
          
      - name: Run minimal browser test
        env:
          GYM_USERNAME: ${{ secrets.GYM_USERNAME }}
          GYM_PASSWORD: ${{ secrets.GYM_PASSWORD }}
          PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium-browser
          DEBUG: "puppeteer:*"
        run: |
          echo "Creating minimal browser test script..."
          cat > minimal-test.js << 'EOL'
          const puppeteer = require('puppeteer-extra');
          const StealthPlugin = require('puppeteer-extra-plugin-stealth');
          const fs = require('fs');
          
          puppeteer.use(StealthPlugin());
          
          (async () => {
            console.log('Starting minimal browser test...');
            let browser;
            
            try {
              console.log('Launching browser...');
              browser = await puppeteer.launch({
                headless: true,
                executablePath: process.env.PUPPETEER_EXECUTABLE_PATH,
                args: ['--no-sandbox', '--disable-setuid-sandbox']
              });
              
              console.log('Browser launched successfully');
              
              const page = await browser.newPage();
              console.log('New page created');
              
              console.log('Navigating to example.com...');
              await page.goto('https://example.com', { 
                waitUntil: 'networkidle2',
                timeout: 30000
              });
              
              console.log('Page loaded, taking screenshot...');
              await page.screenshot({ path: 'example.png' });
              
              console.log('Screenshot taken, checking if file exists...');
              if (fs.existsSync('example.png')) {
                console.log('Screenshot file exists');
              } else {
                console.log('Screenshot file does NOT exist');
              }
              
              console.log('Test completed successfully');
            } catch (error) {
              console.error('Test failed:', error);
            } finally {
              if (browser) {
                console.log('Closing browser...');
                await browser.close();
                console.log('Browser closed');
              }
            }
          })();
          EOL
          
          echo "Running minimal browser test..."
          node minimal-test.js
          echo "Minimal test completed with exit code: $?"
          ls -la
          
      - name: Upload any generated files
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            *.png
            *.txt
          retention-days: 7

